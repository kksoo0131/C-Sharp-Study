호출하는 함수 A, 호출되는 함수 B


Synchronous & Asynchronous 
: 처리할 일을 어떤 "흐름"으로 처리 할 것인가에 대한 관점
호출되는 함수의 작업 완료 여부를 신경쓰는지 에 따라, 함수 실행/리턴 순차적인 흐름을 따라가는지에 대한 이야기

  Synchronous 동기
  : 함수 A가 함수 B의 리턴을 계속 확인하면서 신경쓰는 방식

  Asynchronous 비동기
  : 함수 A가 함수 B를 호출 할때 콜백 함수를 전달해서 함수 B의 작업이 완료되면 콜백 함수를 실행
  즉, 함수 A는 함수 B의 작업 완료 여부를 신경 쓰지 않는다


Blocking & Non-Blocking 
: 처리되어야 하는 작업이 전체적인 작업의 흐름을 막느냐에 대한 관점
함수를 호출 했을때 제어권이 누구에게 가느냐에 대한 이야기

  Blocking
  : 함수 A가 함수 B에게 제어권을 넘겨준다.
    제어권을 넘겨주었기때문에 함수 A는 함수 B가 완료되어 제어권을 돌려줄때까지 멈춘다.

